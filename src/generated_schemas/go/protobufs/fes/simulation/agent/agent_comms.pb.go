// File: schemas/protobufs/agent_comms.proto

// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.36.6
// 	protoc        v6.31.0
// source: agent_comms.proto

// Package declaration for generated code.
// Using a sub-package of the one in generic_event.proto if desired,
// or a new one specific to agent interactions.

package agent

import (
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	reflect "reflect"
	sync "sync"
	unsafe "unsafe"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

type Percept_EntityType int32

const (
	Percept_ENTITY_TYPE_UNSPECIFIED Percept_EntityType = 0 // Default, should not typically be used.
	Percept_ENTITY_TYPE_FOOD        Percept_EntityType = 1
	Percept_ENTITY_TYPE_AGENT       Percept_EntityType = 2 // For Alpha, could be any other agent.
	// Later, could be SAME_SPECIES, PREDATOR, PREY, etc.
	Percept_ENTITY_TYPE_WALL_OBSTACLE Percept_EntityType = 3 // Represents an impassable boundary or obstacle.
)

// Enum value maps for Percept_EntityType.
var (
	Percept_EntityType_name = map[int32]string{
		0: "ENTITY_TYPE_UNSPECIFIED",
		1: "ENTITY_TYPE_FOOD",
		2: "ENTITY_TYPE_AGENT",
		3: "ENTITY_TYPE_WALL_OBSTACLE",
	}
	Percept_EntityType_value = map[string]int32{
		"ENTITY_TYPE_UNSPECIFIED":   0,
		"ENTITY_TYPE_FOOD":          1,
		"ENTITY_TYPE_AGENT":         2,
		"ENTITY_TYPE_WALL_OBSTACLE": 3,
	}
)

func (x Percept_EntityType) Enum() *Percept_EntityType {
	p := new(Percept_EntityType)
	*p = x
	return p
}

func (x Percept_EntityType) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (Percept_EntityType) Descriptor() protoreflect.EnumDescriptor {
	return file_agent_comms_proto_enumTypes[0].Descriptor()
}

func (Percept_EntityType) Type() protoreflect.EnumType {
	return &file_agent_comms_proto_enumTypes[0]
}

func (x Percept_EntityType) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use Percept_EntityType.Descriptor instead.
func (Percept_EntityType) EnumDescriptor() ([]byte, []int) {
	return file_agent_comms_proto_rawDescGZIP(), []int{0, 0}
}

// Represents a single perceived entity or stimulus in the agent's vicinity.
type Percept struct {
	state      protoimpl.MessageState `protogen:"open.v1"`
	EntityType Percept_EntityType     `protobuf:"varint,1,opt,name=entity_type,json=entityType,proto3,enum=fes.simulation.agent.Percept_EntityType" json:"entity_type,omitempty"`
	// Optional: Unique ID of the perceived entity, if available and stable.
	// Can be empty if the entity is transient or ID is not relevant for this percept.
	EntityId string `protobuf:"bytes,2,opt,name=entity_id,json=entityId,proto3" json:"entity_id,omitempty"`
	// Position of the perceived entity relative to the observing agent's current position.
	// X-axis typically aligned with agent's forward direction or world X-axis depending on convention.
	// For Alpha, let's assume world-relative offsets from agent's position for simplicity,
	// or it could be in agent's local coordinate frame (forward is +Y, right is +X).
	// Let's define it as: X relative to agent, Y relative to agent.
	// If agent faces +Y world, then percept.relative_pos_y > 0 is in front.
	RelativePosX  float32 `protobuf:"fixed32,3,opt,name=relative_pos_x,json=relativePosX,proto3" json:"relative_pos_x,omitempty"`
	RelativePosY  float32 `protobuf:"fixed32,4,opt,name=relative_pos_y,json=relativePosY,proto3" json:"relative_pos_y,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *Percept) Reset() {
	*x = Percept{}
	mi := &file_agent_comms_proto_msgTypes[0]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *Percept) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Percept) ProtoMessage() {}

func (x *Percept) ProtoReflect() protoreflect.Message {
	mi := &file_agent_comms_proto_msgTypes[0]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Percept.ProtoReflect.Descriptor instead.
func (*Percept) Descriptor() ([]byte, []int) {
	return file_agent_comms_proto_rawDescGZIP(), []int{0}
}

func (x *Percept) GetEntityType() Percept_EntityType {
	if x != nil {
		return x.EntityType
	}
	return Percept_ENTITY_TYPE_UNSPECIFIED
}

func (x *Percept) GetEntityId() string {
	if x != nil {
		return x.EntityId
	}
	return ""
}

func (x *Percept) GetRelativePosX() float32 {
	if x != nil {
		return x.RelativePosX
	}
	return 0
}

func (x *Percept) GetRelativePosY() float32 {
	if x != nil {
		return x.RelativePosY
	}
	return 0
}

// Contains all information an agent observes about itself and its environment
// at a specific point in time. This is the input to the agent's decision-making process.
type AgentObservation struct {
	state protoimpl.MessageState `protogen:"open.v1"`
	// Agent's own state
	CurrentEnergy      float32 `protobuf:"fixed32,1,opt,name=current_energy,json=currentEnergy,proto3" json:"current_energy,omitempty"`                // Current energy level of the agent.
	CurrentAgeTicks    int64   `protobuf:"varint,2,opt,name=current_age_ticks,json=currentAgeTicks,proto3" json:"current_age_ticks,omitempty"`         // Age of the agent in simulation ticks.
	PosX               float32 `protobuf:"fixed32,3,opt,name=pos_x,json=posX,proto3" json:"pos_x,omitempty"`                                           // Agent's absolute X position in the world.
	PosY               float32 `protobuf:"fixed32,4,opt,name=pos_y,json=posY,proto3" json:"pos_y,omitempty"`                                           // Agent's absolute Y position in the world.
	OrientationDegrees float32 `protobuf:"fixed32,5,opt,name=orientation_degrees,json=orientationDegrees,proto3" json:"orientation_degrees,omitempty"` // Agent's current orientation in degrees (e.g., 0-360, with 0 being world +X or +Y).
	// Sensory input: A list of perceived entities/stimuli.
	Percepts []*Percept `protobuf:"bytes,6,rep,name=percepts,proto3" json:"percepts,omitempty"`
	// Optional: Reward received by the agent for its previous action.
	// Often included in observations for reinforcement learning agents.
	// float last_reward = 7; // For Alpha v1, maybe not essential if reward is handled separately.
	// Let's include it as it's very common for DRL.
	LastReward    float32 `protobuf:"fixed32,7,opt,name=last_reward,json=lastReward,proto3" json:"last_reward,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *AgentObservation) Reset() {
	*x = AgentObservation{}
	mi := &file_agent_comms_proto_msgTypes[1]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *AgentObservation) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*AgentObservation) ProtoMessage() {}

func (x *AgentObservation) ProtoReflect() protoreflect.Message {
	mi := &file_agent_comms_proto_msgTypes[1]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use AgentObservation.ProtoReflect.Descriptor instead.
func (*AgentObservation) Descriptor() ([]byte, []int) {
	return file_agent_comms_proto_rawDescGZIP(), []int{1}
}

func (x *AgentObservation) GetCurrentEnergy() float32 {
	if x != nil {
		return x.CurrentEnergy
	}
	return 0
}

func (x *AgentObservation) GetCurrentAgeTicks() int64 {
	if x != nil {
		return x.CurrentAgeTicks
	}
	return 0
}

func (x *AgentObservation) GetPosX() float32 {
	if x != nil {
		return x.PosX
	}
	return 0
}

func (x *AgentObservation) GetPosY() float32 {
	if x != nil {
		return x.PosY
	}
	return 0
}

func (x *AgentObservation) GetOrientationDegrees() float32 {
	if x != nil {
		return x.OrientationDegrees
	}
	return 0
}

func (x *AgentObservation) GetPercepts() []*Percept {
	if x != nil {
		return x.Percepts
	}
	return nil
}

func (x *AgentObservation) GetLastReward() float32 {
	if x != nil {
		return x.LastReward
	}
	return 0
}

// Describes the action an agent intends to take in the next simulation step.
type AgentAction struct {
	state protoimpl.MessageState `protogen:"open.v1"`
	// Desired change in forward/backward movement.
	// Positive values typically mean forward, negative could mean backward or be ignored
	// if agents can only move forward. The magnitude can be speed or a normalized thrust.
	MoveDelta float32 `protobuf:"fixed32,1,opt,name=move_delta,json=moveDelta,proto3" json:"move_delta,omitempty"`
	// Desired change in orientation in degrees.
	// Positive values for turning one way (e.g., counter-clockwise), negative for the other.
	TurnDeltaDegrees float32 `protobuf:"fixed32,2,opt,name=turn_delta_degrees,json=turnDeltaDegrees,proto3" json:"turn_delta_degrees,omitempty"`
	// If true, the agent attempts to consume food if available at its current location/interaction range.
	AttemptEat    bool `protobuf:"varint,3,opt,name=attempt_eat,json=attemptEat,proto3" json:"attempt_eat,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *AgentAction) Reset() {
	*x = AgentAction{}
	mi := &file_agent_comms_proto_msgTypes[2]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *AgentAction) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*AgentAction) ProtoMessage() {}

func (x *AgentAction) ProtoReflect() protoreflect.Message {
	mi := &file_agent_comms_proto_msgTypes[2]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use AgentAction.ProtoReflect.Descriptor instead.
func (*AgentAction) Descriptor() ([]byte, []int) {
	return file_agent_comms_proto_rawDescGZIP(), []int{2}
}

func (x *AgentAction) GetMoveDelta() float32 {
	if x != nil {
		return x.MoveDelta
	}
	return 0
}

func (x *AgentAction) GetTurnDeltaDegrees() float32 {
	if x != nil {
		return x.TurnDeltaDegrees
	}
	return 0
}

func (x *AgentAction) GetAttemptEat() bool {
	if x != nil {
		return x.AttemptEat
	}
	return false
}

var File_agent_comms_proto protoreflect.FileDescriptor

const file_agent_comms_proto_rawDesc = "" +
	"\n" +
	"\x11agent_comms.proto\x12\x14fes.simulation.agent\"\xb4\x02\n" +
	"\aPercept\x12I\n" +
	"\ventity_type\x18\x01 \x01(\x0e2(.fes.simulation.agent.Percept.EntityTypeR\n" +
	"entityType\x12\x1b\n" +
	"\tentity_id\x18\x02 \x01(\tR\bentityId\x12$\n" +
	"\x0erelative_pos_x\x18\x03 \x01(\x02R\frelativePosX\x12$\n" +
	"\x0erelative_pos_y\x18\x04 \x01(\x02R\frelativePosY\"u\n" +
	"\n" +
	"EntityType\x12\x1b\n" +
	"\x17ENTITY_TYPE_UNSPECIFIED\x10\x00\x12\x14\n" +
	"\x10ENTITY_TYPE_FOOD\x10\x01\x12\x15\n" +
	"\x11ENTITY_TYPE_AGENT\x10\x02\x12\x1d\n" +
	"\x19ENTITY_TYPE_WALL_OBSTACLE\x10\x03\"\x9c\x02\n" +
	"\x10AgentObservation\x12%\n" +
	"\x0ecurrent_energy\x18\x01 \x01(\x02R\rcurrentEnergy\x12*\n" +
	"\x11current_age_ticks\x18\x02 \x01(\x03R\x0fcurrentAgeTicks\x12\x13\n" +
	"\x05pos_x\x18\x03 \x01(\x02R\x04posX\x12\x13\n" +
	"\x05pos_y\x18\x04 \x01(\x02R\x04posY\x12/\n" +
	"\x13orientation_degrees\x18\x05 \x01(\x02R\x12orientationDegrees\x129\n" +
	"\bpercepts\x18\x06 \x03(\v2\x1d.fes.simulation.agent.PerceptR\bpercepts\x12\x1f\n" +
	"\vlast_reward\x18\a \x01(\x02R\n" +
	"lastReward\"{\n" +
	"\vAgentAction\x12\x1d\n" +
	"\n" +
	"move_delta\x18\x01 \x01(\x02R\tmoveDelta\x12,\n" +
	"\x12turn_delta_degrees\x18\x02 \x01(\x02R\x10turnDeltaDegrees\x12\x1f\n" +
	"\vattempt_eat\x18\x03 \x01(\bR\n" +
	"attemptEatBFZDfish_eco_sim/src/generated_schemas/go/protobufs/fes/simulation/agentb\x06proto3"

var (
	file_agent_comms_proto_rawDescOnce sync.Once
	file_agent_comms_proto_rawDescData []byte
)

func file_agent_comms_proto_rawDescGZIP() []byte {
	file_agent_comms_proto_rawDescOnce.Do(func() {
		file_agent_comms_proto_rawDescData = protoimpl.X.CompressGZIP(unsafe.Slice(unsafe.StringData(file_agent_comms_proto_rawDesc), len(file_agent_comms_proto_rawDesc)))
	})
	return file_agent_comms_proto_rawDescData
}

var file_agent_comms_proto_enumTypes = make([]protoimpl.EnumInfo, 1)
var file_agent_comms_proto_msgTypes = make([]protoimpl.MessageInfo, 3)
var file_agent_comms_proto_goTypes = []any{
	(Percept_EntityType)(0),  // 0: fes.simulation.agent.Percept.EntityType
	(*Percept)(nil),          // 1: fes.simulation.agent.Percept
	(*AgentObservation)(nil), // 2: fes.simulation.agent.AgentObservation
	(*AgentAction)(nil),      // 3: fes.simulation.agent.AgentAction
}
var file_agent_comms_proto_depIdxs = []int32{
	0, // 0: fes.simulation.agent.Percept.entity_type:type_name -> fes.simulation.agent.Percept.EntityType
	1, // 1: fes.simulation.agent.AgentObservation.percepts:type_name -> fes.simulation.agent.Percept
	2, // [2:2] is the sub-list for method output_type
	2, // [2:2] is the sub-list for method input_type
	2, // [2:2] is the sub-list for extension type_name
	2, // [2:2] is the sub-list for extension extendee
	0, // [0:2] is the sub-list for field type_name
}

func init() { file_agent_comms_proto_init() }
func file_agent_comms_proto_init() {
	if File_agent_comms_proto != nil {
		return
	}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: unsafe.Slice(unsafe.StringData(file_agent_comms_proto_rawDesc), len(file_agent_comms_proto_rawDesc)),
			NumEnums:      1,
			NumMessages:   3,
			NumExtensions: 0,
			NumServices:   0,
		},
		GoTypes:           file_agent_comms_proto_goTypes,
		DependencyIndexes: file_agent_comms_proto_depIdxs,
		EnumInfos:         file_agent_comms_proto_enumTypes,
		MessageInfos:      file_agent_comms_proto_msgTypes,
	}.Build()
	File_agent_comms_proto = out.File
	file_agent_comms_proto_goTypes = nil
	file_agent_comms_proto_depIdxs = nil
}
