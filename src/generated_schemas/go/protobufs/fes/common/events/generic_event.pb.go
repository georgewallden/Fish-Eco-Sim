// File: schemas/protobufs/generic_event.proto

// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.36.6
// 	protoc        v6.31.0
// source: generic_event.proto

// Option to define a package for better namespacing, especially if you have many .proto files.
// This affects the generated code's package/module structure.
// Example: package fish_eco_sim.events;
// For now, let's keep it simple without a top-level package specific to this file,
// or we can add a general one like:

package events

import (
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	reflect "reflect"
	sync "sync"
	unsafe "unsafe"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

// GenericEventRequest serves as a common wrapper for various events
// transmitted within the Fish Eco Sim system.
type GenericEventRequest struct {
	state protoimpl.MessageState `protogen:"open.v1"`
	// Unique identifier for this specific event instance (e.g., a UUID string).
	EventId string `protobuf:"bytes,1,opt,name=event_id,json=eventId,proto3" json:"event_id,omitempty"`
	// A key string identifying the type of event contained in the event_payload.
	// Examples: "agent.spawn", "world.tick", "simulation.ended".
	EventTypeKey string `protobuf:"bytes,2,opt,name=event_type_key,json=eventTypeKey,proto3" json:"event_type_key,omitempty"`
	// The serialized payload of the specific event. The format is indicated
	// by payload_content_type and implicitly by event_type_key.
	EventPayload []byte `protobuf:"bytes,3,opt,name=event_payload,json=eventPayload,proto3" json:"event_payload,omitempty"`
	// UTC timestamp of when the event occurred or was generated,
	// represented as nanoseconds since the Unix epoch.
	TimestampNs int64 `protobuf:"varint,4,opt,name=timestamp_ns,json=timestampNs,proto3" json:"timestamp_ns,omitempty"`
	// Identifier of the service, worker, or component that originated this event.
	// Examples: "sim-worker-01", "orchestrator", "ui-client-userX".
	SourceWorkerId string `protobuf:"bytes,5,opt,name=source_worker_id,json=sourceWorkerId,proto3" json:"source_worker_id,omitempty"`
	// Identifier for the specific simulation run this event pertains to.
	// Can be empty if the event is not specific to a simulation run.
	SimulationId string `protobuf:"bytes,6,opt,name=simulation_id,json=simulationId,proto3" json:"simulation_id,omitempty"`
	// Describes the format and type of the event_payload.
	// Helps consumers correctly deserialize the event_payload.
	// Examples: "application/protobuf; message=fes.simulation.AgentSpawnedEvent",
	//
	//	"application/json",
	//	"application/vnd.google.flatbuffers; type=WorldStateSnapshot"
	PayloadContentType string `protobuf:"bytes,7,opt,name=payload_content_type,json=payloadContentType,proto3" json:"payload_content_type,omitempty"`
	// Optional identifier used to correlate this event with other events or requests
	// in a larger workflow or conversation. Can be empty if not applicable.
	CorrelationId string `protobuf:"bytes,8,opt,name=correlation_id,json=correlationId,proto3" json:"correlation_id,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *GenericEventRequest) Reset() {
	*x = GenericEventRequest{}
	mi := &file_generic_event_proto_msgTypes[0]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *GenericEventRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GenericEventRequest) ProtoMessage() {}

func (x *GenericEventRequest) ProtoReflect() protoreflect.Message {
	mi := &file_generic_event_proto_msgTypes[0]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GenericEventRequest.ProtoReflect.Descriptor instead.
func (*GenericEventRequest) Descriptor() ([]byte, []int) {
	return file_generic_event_proto_rawDescGZIP(), []int{0}
}

func (x *GenericEventRequest) GetEventId() string {
	if x != nil {
		return x.EventId
	}
	return ""
}

func (x *GenericEventRequest) GetEventTypeKey() string {
	if x != nil {
		return x.EventTypeKey
	}
	return ""
}

func (x *GenericEventRequest) GetEventPayload() []byte {
	if x != nil {
		return x.EventPayload
	}
	return nil
}

func (x *GenericEventRequest) GetTimestampNs() int64 {
	if x != nil {
		return x.TimestampNs
	}
	return 0
}

func (x *GenericEventRequest) GetSourceWorkerId() string {
	if x != nil {
		return x.SourceWorkerId
	}
	return ""
}

func (x *GenericEventRequest) GetSimulationId() string {
	if x != nil {
		return x.SimulationId
	}
	return ""
}

func (x *GenericEventRequest) GetPayloadContentType() string {
	if x != nil {
		return x.PayloadContentType
	}
	return ""
}

func (x *GenericEventRequest) GetCorrelationId() string {
	if x != nil {
		return x.CorrelationId
	}
	return ""
}

var File_generic_event_proto protoreflect.FileDescriptor

const file_generic_event_proto_rawDesc = "" +
	"\n" +
	"\x13generic_event.proto\x12\x11fes.common.events\"\xc6\x02\n" +
	"\x13GenericEventRequest\x12\x19\n" +
	"\bevent_id\x18\x01 \x01(\tR\aeventId\x12$\n" +
	"\x0eevent_type_key\x18\x02 \x01(\tR\feventTypeKey\x12#\n" +
	"\revent_payload\x18\x03 \x01(\fR\feventPayload\x12!\n" +
	"\ftimestamp_ns\x18\x04 \x01(\x03R\vtimestampNs\x12(\n" +
	"\x10source_worker_id\x18\x05 \x01(\tR\x0esourceWorkerId\x12#\n" +
	"\rsimulation_id\x18\x06 \x01(\tR\fsimulationId\x120\n" +
	"\x14payload_content_type\x18\a \x01(\tR\x12payloadContentType\x12%\n" +
	"\x0ecorrelation_id\x18\b \x01(\tR\rcorrelationIdBJZHfish_eco_sim/src/generated_schemas/go/protobufs/fes/common/events;eventsb\x06proto3"

var (
	file_generic_event_proto_rawDescOnce sync.Once
	file_generic_event_proto_rawDescData []byte
)

func file_generic_event_proto_rawDescGZIP() []byte {
	file_generic_event_proto_rawDescOnce.Do(func() {
		file_generic_event_proto_rawDescData = protoimpl.X.CompressGZIP(unsafe.Slice(unsafe.StringData(file_generic_event_proto_rawDesc), len(file_generic_event_proto_rawDesc)))
	})
	return file_generic_event_proto_rawDescData
}

var file_generic_event_proto_msgTypes = make([]protoimpl.MessageInfo, 1)
var file_generic_event_proto_goTypes = []any{
	(*GenericEventRequest)(nil), // 0: fes.common.events.GenericEventRequest
}
var file_generic_event_proto_depIdxs = []int32{
	0, // [0:0] is the sub-list for method output_type
	0, // [0:0] is the sub-list for method input_type
	0, // [0:0] is the sub-list for extension type_name
	0, // [0:0] is the sub-list for extension extendee
	0, // [0:0] is the sub-list for field type_name
}

func init() { file_generic_event_proto_init() }
func file_generic_event_proto_init() {
	if File_generic_event_proto != nil {
		return
	}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: unsafe.Slice(unsafe.StringData(file_generic_event_proto_rawDesc), len(file_generic_event_proto_rawDesc)),
			NumEnums:      0,
			NumMessages:   1,
			NumExtensions: 0,
			NumServices:   0,
		},
		GoTypes:           file_generic_event_proto_goTypes,
		DependencyIndexes: file_generic_event_proto_depIdxs,
		MessageInfos:      file_generic_event_proto_msgTypes,
	}.Build()
	File_generic_event_proto = out.File
	file_generic_event_proto_goTypes = nil
	file_generic_event_proto_depIdxs = nil
}
